The Evidence Framework Driven Control Parameter Optimisation Algorithm (EFCPO)
This is an implentaion done by M. Duma 2024 and was submitted to the Journal
of Information Science.

In order to know the basics of using the code, we will explain how to run the code on the following files:

1. loaddata.m - loading the data into the .mat files
2. tsprunmodels.m - run the ACO algorithms without using the evidence framework.
3. tsprunefconfig.m - run the ACO algorithms using the evidence framework (EFCPO).


Disclaimer:

The EFCPO code is copyright to the original author(s). Any use of the work or code here must be acknowledged or referrence accordingly:
M. Duma, B. Twala, M. Marwala. Control parameter optimisation using the evidence framework for the ant colony optimisation algorithm. Information Science

In order to run the code, the following software and hardware specifications need to be meat:

 1. Windows 10 64-bit operating system or higher. The solution can run in Redhat or CentOS linux operating system.
 2. MATLAB R2020b or higher.
 3. 16 GB RAM running on an Intel Core i7.
 4. NVIDIA GeForce GTX 1650 graphics card or higher.

1. You need to Load the data into .mat files
   1.1 Download the the travelling salesman problem data from Heidelberg University. http://comopt.ifi.uni-heidelberg.de/software/TSPLIB95/tsp/
   1.2 Locate the loaddata.m and replace the "<directory of the tsp file>" part with the actual location of the tsp files.
   1.3 To make things easy. Ensure that the tsp files are all extracted into one folder.
   1.4 Run the loaddata.m  to create the relevant mat files. The files will be saved in the same location specified in 1.2
   
2. Run the tsprunmodels.m file
   2.1 Locate the tsprunmodels.m and replace the "'<directory of the .mat or .tsp file>'" part with the actual location of the mat files. 
   2.2 Remember to "Press any key to continue" in order for the code to run. Note that at this point the user can run one model at a time
       and play around with the configurations to see what the output of each ACO gives.
   2.3 The code loads the relevant mat file and then tries to run all models.
   2.4 The code may take long to run for some datasets(as MATLAB is inherently slow at best). 
       we do encourage the user to examine one model at a time.
	   
3. Run the tsprunefconfig.m file
   3.1 Download the irace.zip file from the Github repository (https://github.com/mduma2011/EFCPO). This file contains the data generate via irace. The size is about 269MB in total. 
       Unzip the file and place it in a '<directory of irace directory>'.   
   3.2 Locate the tsprunefconfig.m and replace the "'<directory of irace directory>'" part with the actual location of the samples generated by iRace. 
   3.3 Replace the "'<directory of results>'" part with the actual location of the results.   
   3.5 The code loads the data or each sample in the data and assigns it to a number of variables.
   3.4 The ACO algorithm is executed initialy followed by the execution of the evidenceacotsp.
   3.5 We do advise the user to examine the execution of the code per sample and per model in order to understand how the code works
   
       	   




